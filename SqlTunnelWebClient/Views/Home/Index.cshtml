@using System.Net
@using Newtonsoft.Json
@model SqlTunnelWebClient.Models.AgentViewModel
@inject SqlTunnelWebClient.Services.SettingsService SettingsService

@{
    ViewData["Title"] = "SQL Tunnel Dashboard";
}

<div class="container">
    <!-- 🚀 ENHANCED: Hero section -->
    <div class="card border-0 shadow-lg mb-4" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 200px;">
        <div class="card-body text-white d-flex align-items-center">
            <div class="row w-100">
                <div class="col-md-8">
                    <h1 class="display-5 fw-bold mb-3">
                        <i class="bi bi-lightning-fill me-3"></i>
                        🚀 SQL Tunnel Dashboard
                    </h1>
                    <p class="lead mb-3">
                        High-performance SQL execution with unlimited streaming technology
                    </p>
                    <div class="d-flex gap-2 flex-wrap">
                        <span class="badge bg-light text-dark px-3 py-2">
                            <i class="bi bi-shield-check me-1"></i>
                            ⚡ SignalR Streaming
                        </span>
                        <span class="badge bg-light text-dark px-3 py-2">
                            <i class="bi bi-infinity me-1"></i>
                            ∞ Unlimited Data
                        </span>
                        <span class="badge bg-light text-dark px-3 py-2">
                            <i class="bi bi-cpu me-1"></i>
                            🚀 Optimized Performance
                        </span>
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <div class="text-center">
                        <i class="bi bi-database-gear" style="font-size: 5rem; opacity: 0.3;"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
            <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
            <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    <!-- 🎯 Quick actions -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100 hover-card">
                <div class="card-body text-center">
                    <div class="text-primary mb-3">
                        <i class="bi bi-play-circle-fill" style="font-size: 3rem;"></i>
                    </div>
                    <h5 class="card-title">⚡ Quick Execute</h5>
                    <p class="card-text text-muted">
                        Execute SQL queries with any available agent
                    </p>
                    <a href="@Url.Action("Index", "Sql")" class="btn btn-primary">
                        <i class="bi bi-lightning-fill"></i> Start Query
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100 hover-card">
                <div class="card-body text-center">
                    <div class="text-success mb-3">
                        <i class="bi bi-clock-history" style="font-size: 3rem;"></i>
                    </div>
                    <h5 class="card-title">📊 Query History</h5>
                    <p class="card-text text-muted">
                        View recent executions and performance metrics
                    </p>
                    <a href="@Url.Action("QueryResults", "Sql")" class="btn btn-success">
                        <i class="bi bi-database-check"></i> View History
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100 hover-card">
                <div class="card-body text-center">
                    <div class="text-info mb-3">
                        <i class="bi bi-graph-up-arrow" style="font-size: 3rem;"></i>
                    </div>
                    <h5 class="card-title">📈 Performance</h5>
                    <p class="card-text text-muted">
                        Monitor streaming performance and metrics
                    </p>
                    <button class="btn btn-info" onclick="refreshAgents()">
                        <i class="bi bi-arrow-repeat"></i> Refresh Status
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- 🎨 ENHANCED: Agents section -->
    <div class="card border-0 shadow-lg">
        <div class="card-header bg-light border-0">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h5 class="mb-0">
                        <i class="bi bi-server me-2"></i>
                        🖥️ Connected SQL Agents
                    </h5>
                    <small class="text-muted">Select an agent for dedicated query execution</small>
                </div>
                <div class="col-md-6 text-end">
                    <div class="btn-group" role="group">
                        <button id="refreshAgents" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-arrow-clockwise"></i> Refresh
                        </button>
                        <button class="btn btn-outline-secondary btn-sm" onclick="toggleAgentDetails()">
                            <i class="bi bi-info-circle"></i> Details
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body">
            @if (Model.Agents == null || !Model.Agents.Any())
            {
                    <div class="text-center py-5">
                        <div class="text-muted mb-3">
                            <i class="bi bi-server" style="font-size: 4rem; opacity: 0.3;"></i>
                        </div>
                        <h5 class="text-muted">No SQL agents are currently connected</h5>
                        <p class="text-muted mb-4">
                            Please ensure at least one SQLTunnelService is running and connected to the relay server.
                        </p>
                        <button class="btn btn-primary" onclick="refreshAgents()">
                            <i class="bi bi-arrow-repeat"></i> Check Again
                        </button>
                    </div>
            }
            else
            {
                    <div class="table-responsive">
                        <table class="table table-hover align-middle">
                            <thead class="table-dark">
                                <tr>
                                    <th>🔋 Status</th>
                                    <th>🏷️ Name</th>
                                    <th>📝 Description</th>
                                    <th>🔢 Version</th>
                                    <th>⏰ Last Heartbeat</th>
                                    <th>⚡ Performance</th>
                                    <th>🎯 Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var agent in Model.Agents)
                            {
                                        <tr class="agent-row" data-agent-id="@agent.ServiceId">
                                            <td>
                                        @if (agent.IsActive)
                                        {
                                                        <span class="badge bg-success px-3 py-2">
                                                            <i class="bi bi-check-circle-fill"></i> Online
                                                        </span>
                                        }
                                        else
                                        {
                                                        <span class="badge bg-danger px-3 py-2">
                                                            <i class="bi bi-x-circle-fill"></i> Offline
                                                        </span>
                                        }
                                            </td>
                                            <td>
                                                <div class="fw-bold">@agent.DisplayName</div>
                                                <small class="text-muted">ID: @agent.ServiceId</small>
                                            </td>
                                            <td>
                                                <span class="text-muted">@agent.Description</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">v@agent.Version</span>
                                            </td>
                                            <td title="@agent.LastHeartbeat.ToString("yyyy-MM-dd HH:mm:ss")">
                                        @if (agent.TimeSinceLastHeartbeat < 60)
                                        {
                                                        <span class="text-success">
                                                            <i class="bi bi-circle-fill" style="font-size: 0.5rem;"></i>
                                                @($"{Math.Round(agent.TimeSinceLastHeartbeat)}s ago")
                                                        </span>
                                        }
                                        else
                                        {
                                                        <span class="text-warning">
                                                            <i class="bi bi-circle-fill" style="font-size: 0.5rem;"></i>
                                                @($"{Math.Round(agent.TimeSinceLastHeartbeat / 60)}m ago")
                                                        </span>
                                        }
                                            </td>
                                            <td>
                                                <div class="d-flex gap-1">
                                                    <span class="badge bg-primary">⚡ Streaming</span>
                                                    <span class="badge bg-success">∞ Unlimited</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a href="@Url.Action("Agent", "Sql", new { serviceId = Uri.EscapeDataString(agent.ServiceId) })"
                                                       class="btn btn-primary">
                                                        <i class="bi bi-play-fill"></i> Query
                                                    </a>
                                                    <button type="button" class="btn btn-outline-info"
                                                            data-bs-toggle="modal" data-bs-target="#agentInfoModal"
                                                            data-agent-id="@agent.ServiceId">
                                                        <i class="bi bi-info-circle"></i> Info
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                            }
                            </tbody>
                        </table>
                    </div>

                    <!-- 🚀 Performance summary -->
                    <div class="mt-4">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h2 text-primary mb-0">@Model.Agents.Count(a => a.IsActive)</div>
                                    <div class="text-muted small">🟢 Active Agents</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h2 text-secondary mb-0">@Model.Agents.Count</div>
                                    <div class="text-muted small">📊 Total Agents</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h2 text-success mb-0">∞</div>
                                    <div class="text-muted small">⚡ Data Capacity</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h2 text-info mb-0">100%</div>
                                    <div class="text-muted small">🚀 Performance</div>
                                </div>
                            </div>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>

<!-- 🎨 ENHANCED: Agent Info Modal -->
<div class="modal fade" id="agentInfoModal" tabindex="-1" aria-labelledby="agentInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="agentInfoModalLabel">
                    <i class="bi bi-server me-2"></i>
                    🔍 Agent Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="agentDetailsContent">
                    <div class="text-center py-3">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <div class="mt-2">Loading agent details...</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg"></i> Close
                </button>
                <button type="button" class="btn btn-primary" id="executeWithAgentBtn">
                    <i class="bi bi-play-fill"></i> Execute Query
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 🎨 Custom styles -->
<style>
    .hover-card {
        transition: all 0.3s ease;
    }

    .hover-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
    }

    .agent-row {
        transition: all 0.2s ease;
    }

    .agent-row:hover {
        background: linear-gradient(145deg, #f8f9fa, #e9ecef);
    }

    .table-dark {
        background: linear-gradient(135deg, #495057, #6c757d) !important;
    }

    .performance-indicator {
        animation: pulse 2s infinite;
    }

    /* CSS Keyframes - Fixed for Razor */
    @@keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.7; }
        100% { opacity: 1; }
    }

    .status-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 5px;
    }

    .status-online {
        background: #28a745;
        box-shadow: 0 0 10px rgba(40, 167, 69, 0.5);
    }

    .status-offline {
        background: #dc3545;
    }
</style>

@section Scripts {
        <script>
            $(document).ready(function() {
                console.log('🏠 Enhanced SQL Tunnel Dashboard loaded');

                // 🚀 Initialize dashboard
                initializeDashboard();

                // ⚡ Setup auto-refresh
                setupAutoRefresh();
            });

            function initializeDashboard() {
                // Add performance indicators
                $('.agent-row').each(function(index) {
                    const isActive = $(this).find('.badge-success').length > 0;
                    if (isActive) {
                        $(this).find('.badge-primary, .badge-success').addClass('performance-indicator');
                    }
                });

                console.log('✅ Dashboard initialized with enhanced features');
            }

            function setupAutoRefresh() {
                // Auto-refresh every 30 seconds
                setInterval(function() {
                    const activeAgents = $('.badge-success').length;
                    console.log(`🔄 Auto-refresh check - ${activeAgents} active agents`);
                }, 30000);
            }

            // 🔄 Refresh agents
            function refreshAgents() {
                console.log('🔄 Refreshing agents...');

                const refreshBtn = $('#refreshAgents');
                const originalText = refreshBtn.html();

                refreshBtn.html('<i class="bi bi-hourglass-split"></i> Refreshing...');
                refreshBtn.prop('disabled', true);

                setTimeout(() => {
                    window.location.reload();
                }, 500);
            }

            // 🎯 Toggle agent details
            let detailsVisible = false;
            function toggleAgentDetails() {
                detailsVisible = !detailsVisible;

                $('.agent-row small').toggle(detailsVisible);
                console.log(detailsVisible ? '👁️ Showing agent details' : '👁️‍🗨️ Hiding agent details');
            }

            // 🔍 Enhanced agent info modal
            $('#agentInfoModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const agentId = button.data('agent-id');
                const agents = @Html.Raw(JsonConvert.SerializeObject(Model.Agents));

                const agent = agents.find(a => a.ServiceId === agentId);
                if (agent) {
                    let content = `
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card border-0 bg-light mb-3">
                                    <div class="card-body">
                                        <h6 class="card-title">🏷️ Basic Information</h6>
                                        <table class="table table-sm">
                                            <tr>
                                                <th>Service ID:</th>
                                                <td><code>${agent.ServiceId}</code></td>
                                            </tr>
                                            <tr>
                                                <th>Display Name:</th>
                                                <td>${agent.DisplayName}</td>
                                            </tr>
                                            <tr>
                                                <th>Description:</th>
                                                <td>${agent.Description}</td>
                                            </tr>
                                            <tr>
                                                <th>Version:</th>
                                                <td><span class="badge bg-info">v${agent.Version}</span></td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card border-0 bg-light mb-3">
                                    <div class="card-body">
                                        <h6 class="card-title">⚡ Performance Status</h6>
                                        <table class="table table-sm">
                                            <tr>
                                                <th>Status:</th>
                                                <td>${agent.IsActive ? '<span class="badge bg-success">🟢 Online</span>' : '<span class="badge bg-danger">🔴 Offline</span>'}</td>
                                            </tr>
                                            <tr>
                                                <th>Last Heartbeat:</th>
                                                <td>${new Date(agent.LastHeartbeat).toLocaleString()}</td>
                                            </tr>
                                            <tr>
                                                <th>Response Time:</th>
                                                <td>${agent.TimeSinceLastHeartbeat < 60 ? 
                                                    '<span class="text-success">⚡ Excellent</span>' : 
                                                    '<span class="text-warning">⚠️ Slow</span>'}</td>
                                            </tr>
                                            <tr>
                                                <th>Streaming:</th>
                                                <td><span class="badge bg-primary">⚡ Unlimited</span></td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card border-0 bg-light">
                            <div class="card-body">
                                <h6 class="card-title">🖥️ Server Information</h6>
                                <pre class="bg-dark text-light p-3 rounded small">${agent.ServerInfo}</pre>
                            </div>
                        </div>

                        <div class="mt-3 p-3 rounded" style="background: linear-gradient(135deg, #e3f2fd, #f3e5f5);">
                            <h6>🚀 Performance Features</h6>
                            <div class="row">
                                <div class="col-md-3 text-center">
                                    <div class="h4 text-primary">∞</div>
                                    <small>Data Capacity</small>
                                </div>
                                <div class="col-md-3 text-center">
                                    <div class="h4 text-success">⚡</div>
                                    <small>SignalR Streaming</small>
                                </div>
                                <div class="col-md-3 text-center">
                                    <div class="h4 text-info">🚀</div>
                                    <small>Optimized</small>
                                </div>
                                <div class="col-md-3 text-center">
                                    <div class="h4 text-warning">🛡️</div>
                                    <small>Memory Safe</small>
                                </div>
                            </div>
                        </div>
                    `;

                    $('#agentDetailsContent').html(content);

                    // Update execute button
                    $('#executeWithAgentBtn').off('click').on('click', function() {
                        window.location.href = '@Url.Action("Agent", "Sql")?serviceId=' + encodeURIComponent(agent.ServiceId);
                    });
                }
            });
        </script>
}