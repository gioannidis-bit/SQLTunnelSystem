@{
    ViewData["Title"] = "Query Results History";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <!-- 🎨 ENHANCED: Beautiful header -->
            <div class="card border-0 shadow-sm mb-4" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                <div class="card-body text-white">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h1 class="h3 mb-2">
                                <i class="bi bi-database-check me-2"></i>
                                📊 Query Results History
                            </h1>
                            <p class="mb-0 opacity-75">
                                ⚡ Real-time streaming query execution history with unlimited data support
                            </p>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="d-flex justify-content-end gap-2">
                                <button class="btn btn-light btn-sm" onclick="location.reload()">
                                    <i class="bi bi-arrow-clockwise"></i> Refresh
                                </button>
                                <a href="@Url.Action("Index", "Sql")" class="btn btn-warning btn-sm">
                                    <i class="bi bi-plus-circle"></i> New Query
                                </a>
                                <a href="@Url.Action("Index", "Home")" class="btn btn-success btn-sm">
                                    <i class="bi bi-house"></i> Home
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        <strong>Error:</strong> @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
            }

            <!-- 🚀 ENHANCED: Performance metrics card -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body text-center">
                            <div class="text-primary mb-2">
                                <i class="bi bi-lightning-fill" style="font-size: 2rem;"></i>
                            </div>
                            <h5 class="card-title">⚡ Streaming Enabled</h5>
                            <p class="card-text small text-muted">
                                Unlimited data processing with real-time streaming technology
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body text-center">
                            <div class="text-success mb-2">
                                <i class="bi bi-shield-check" style="font-size: 2rem;"></i>
                            </div>
                            <h5 class="card-title">🛡️ Optimized</h5>
                            <p class="card-text small text-muted">
                                Memory-efficient processing with smart garbage collection
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body text-center">
                            <div class="text-info mb-2">
                                <i class="bi bi-graph-up" style="font-size: 2rem;"></i>
                            </div>
                            <h5 class="card-title">📈 High Performance</h5>
                            <p class="card-text small text-muted">
                                SignalR streaming with parallel query processing
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 🎨 ENHANCED: Main results container -->
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-light border-0">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-0">
                                <i class="bi bi-clock-history me-2"></i>
                                🕒 Recent Query Executions
                            </h5>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-primary" id="autoRefreshToggle">
                                    <i class="bi bi-arrow-repeat"></i> Auto-refresh
                                </button>
                                <button type="button" class="btn btn-outline-secondary" onclick="expandAllQueries()">
                                    <i class="bi bi-arrows-expand"></i> Expand All
                                </button>
                                <button type="button" class="btn btn-outline-secondary" onclick="collapseAllQueries()">
                                    <i class="bi bi-arrows-collapse"></i> Collapse All
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body p-0">
                    <!-- 🚀 Loading indicator -->
                    <div id="loadingIndicator" class="text-center py-5" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <div class="mt-2">
                            <strong>🔄 Loading query history...</strong>
                        </div>
                    </div>

                    <!-- 🎨 ENHANCED: Results container with better styling -->
                    <div class="table-responsive relay-html-container" id="resultsContainer">
                        @Html.Raw(ViewBag.QueryHtml)
                    </div>

                    <!-- 🚀 Empty state -->
                    <div id="emptyState" class="text-center py-5" style="display: none;">
                        <div class="text-muted mb-3">
                            <i class="bi bi-database-x" style="font-size: 3rem;"></i>
                        </div>
                        <h5>No Query Results Yet</h5>
                        <p class="text-muted">Execute your first query to see results here.</p>
                        <a href="@Url.Action("Index", "Sql")" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Execute New Query
                        </a>
                    </div>
                </div>

                <!-- 🎨 ENHANCED: Footer with stats -->
                <div class="card-footer bg-light border-0">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <small class="text-muted">
                                <i class="bi bi-info-circle me-1"></i>
                                Auto-refreshes every 2 minutes • 
                                <span id="lastRefreshTime">Last updated: <span id="refreshTimestamp">Loading...</span></span>
                            </small>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="badge bg-primary">
                                <i class="bi bi-lightning-fill me-1"></i>
                                Streaming Technology
                            </div>
                            <div class="badge bg-success ms-1">
                                <i class="bi bi-shield-check me-1"></i>
                                Optimized Performance
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 🚀 Enhanced custom styles -->
<style>
    /* Custom enhancements for query results */
    .relay-html-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .relay-html-container .query {
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        border: 1px solid #e9ecef;
        border-radius: 12px;
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .relay-html-container .query:hover {
        box-shadow: 0 4px 16px rgba(0,0,0,0.12);
        transform: translateY(-2px);
    }

    .relay-html-container .query::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    .relay-html-container .query h3 {
        color: #495057;
        font-weight: 600;
        margin-bottom: 1rem;
        font-size: 1.1rem;
    }

    .relay-html-container .timestamp {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
        display: inline-block;
        margin-bottom: 0.75rem;
    }

    .relay-html-container .query-text {
        background: linear-gradient(145deg, #f8f9fa, #e9ecef);
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 1rem;
        margin: 0.75rem 0;
        font-family: 'JetBrains Mono', 'Fira Code', 'Courier New', monospace;
        font-size: 0.9rem;
        line-height: 1.4;
        color: #495057;
        position: relative;
    }

    .relay-html-container .query-text::before {
        content: 'SQL';
        position: absolute;
        top: -8px;
        left: 12px;
        background: #6c757d;
        color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: bold;
    }

    .relay-html-container table {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-top: 1rem;
    }

    .relay-html-container table th {
        background: linear-gradient(135deg, #495057, #6c757d);
        color: white;
        font-weight: 600;
        padding: 0.75rem;
        border: none;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .relay-html-container table td {
        padding: 0.6rem;
        border-bottom: 1px solid #e9ecef;
        font-size: 0.85rem;
        vertical-align: top;
    }

    .relay-html-container table tr:nth-child(even) {
        background: linear-gradient(145deg, #f8f9fa, #ffffff);
    }

    .relay-html-container table tr:hover {
        background: linear-gradient(145deg, #e3f2fd, #f3e5f5);
        transition: background 0.2s ease;
    }

    /* Error styling */
    .relay-html-container div[style*="color:red"] {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
        padding: 1rem;
        border-radius: 8px;
        margin: 0.75rem 0;
        font-weight: 500;
    }

    .relay-html-container div[style*="color:red"]::before {
        content: '⚠️ ';
        font-size: 1.1em;
    }

    /* Performance badges */
    .performance-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 12px;
        font-size: 0.7rem;
        font-weight: bold;
    }

    /* Auto-refresh indicator */
    .auto-refresh-active {
        animation: pulse 2s infinite;
    }

    /* CSS Keyframes - Fixed for Razor */
    @@keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.7; }
        100% { opacity: 1; }
    }

    /* Responsive improvements - Fixed for Razor */
    @@media (max-width: 768px) {
        .relay-html-container .query {
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .relay-html-container table {
            font-size: 0.8rem;
        }
    }
</style>

@section Scripts {
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                console.log('🎨 Enhanced QueryResults page loaded');

                // 🚀 Enhanced table styling
                enhanceQueryResults();

                // ⏰ Auto-refresh functionality
                setupAutoRefresh();

                // 📊 Update timestamps
                updateRefreshTimestamp();

                // 🎨 Add performance indicators
                addPerformanceIndicators();

                console.log('✅ QueryResults enhancements applied');
            });

            function enhanceQueryResults() {
                const tables = document.querySelectorAll('.relay-html-container table');

                tables.forEach((table, index) => {
                    if (table) {
                        // Add enhanced classes
                        table.classList.add('table', 'table-sm', 'table-hover', 'align-middle');
                        table.removeAttribute('width');

                        // Add row count badge
                        const rowCount = table.querySelectorAll('tbody tr').length;
                        if (rowCount > 0) {
                            const query = table.closest('.query');
                            if (query && !query.querySelector('.performance-badge')) {
                                const badge = document.createElement('div');
                                badge.className = 'performance-badge';
                                badge.innerHTML = `📊 ${rowCount} rows`;
                                query.style.position = 'relative';
                                query.appendChild(badge);
                            }
                        }

                        // Enhance cells
                        table.querySelectorAll('th, td').forEach(cell => {
                            cell.classList.add('py-2', 'px-3');
                        });

                        console.log(`✅ Enhanced table ${index + 1} with ${rowCount} rows`);
                    }
                });

                // Check if empty
                const queries = document.querySelectorAll('.relay-html-container .query');
                const emptyState = document.getElementById('emptyState');
                const resultsContainer = document.getElementById('resultsContainer');

                if (queries.length === 0 && emptyState && resultsContainer) {
                    resultsContainer.style.display = 'none';
                    emptyState.style.display = 'block';
                }
            }

            // 🔄 Auto-refresh functionality
            let autoRefreshInterval;
            let autoRefreshEnabled = false;

            function setupAutoRefresh() {
                const toggleBtn = document.getElementById('autoRefreshToggle');
                if (toggleBtn) {
                    toggleBtn.addEventListener('click', function() {
                        autoRefreshEnabled = !autoRefreshEnabled;

                        if (autoRefreshEnabled) {
                            this.classList.remove('btn-outline-primary');
                            this.classList.add('btn-primary', 'auto-refresh-active');
                            this.innerHTML = '<i class="bi bi-arrow-repeat"></i> Auto-refresh ON';

                            autoRefreshInterval = setInterval(() => {
                                console.log('🔄 Auto-refreshing query results...');
                                location.reload();
                            }, 120000); // 2 minutes

                            console.log('✅ Auto-refresh enabled (2 min intervals)');
                        } else {
                            this.classList.remove('btn-primary', 'auto-refresh-active');
                            this.classList.add('btn-outline-primary');
                            this.innerHTML = '<i class="bi bi-arrow-repeat"></i> Auto-refresh';

                            if (autoRefreshInterval) {
                                clearInterval(autoRefreshInterval);
                            }

                            console.log('⏹️ Auto-refresh disabled');
                        }
                    });
                }
            }

            function updateRefreshTimestamp() {
                const timestamp = document.getElementById('refreshTimestamp');
                if (timestamp) {
                    timestamp.textContent = new Date().toLocaleString();
                }
            }

            function addPerformanceIndicators() {
                const queries = document.querySelectorAll('.relay-html-container .query');

                queries.forEach((query, index) => {
                    // Add query index
                    const h3 = query.querySelector('h3');
                    if (h3 && !h3.textContent.includes('🚀')) {
                        h3.innerHTML = `🚀 ${h3.innerHTML}`;
                    }

                    // Add streaming indicator to query text
                    const queryText = query.querySelector('.query-text');
                    if (queryText && !queryText.querySelector('.streaming-indicator')) {
                        const indicator = document.createElement('div');
                        indicator.className = 'streaming-indicator position-absolute';
                        indicator.style.cssText = 'top: -8px; right: 12px; background: #28a745; color: white; padding: 2px 8px; border-radius: 4px; font-size: 0.7rem; font-weight: bold;';
                        indicator.innerHTML = '⚡ STREAMED';
                        queryText.style.position = 'relative';
                        queryText.appendChild(indicator);
                    }

                    // Add execution time if available
                    const timestamp = query.querySelector('.timestamp');
                    if (timestamp) {
                        timestamp.innerHTML = `⏰ ${timestamp.textContent}`;
                    }
                });
            }

            // 📊 Expand/Collapse functionality
            function expandAllQueries() {
                const tables = document.querySelectorAll('.relay-html-container table');
                tables.forEach(table => {
                    table.style.display = 'table';
                });
                console.log('📊 Expanded all query results');
            }

            function collapseAllQueries() {
                const tables = document.querySelectorAll('.relay-html-container table');
                tables.forEach(table => {
                    table.style.display = 'none';
                });
                console.log('📁 Collapsed all query results');
            }

            // 🎨 Add loading animations when refreshing
            window.addEventListener('beforeunload', function() {
                const loadingIndicator = document.getElementById('loadingIndicator');
                if (loadingIndicator) {
                    loadingIndicator.style.display = 'block';
                }
            });
        </script>
}